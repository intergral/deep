//
// Copyright (C) 2023  Intergral GmbH
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: deep.proto

package deeppb

import (
	v11 "github.com/intergral/deep/pkg/deeppb/poll/v1"
	v1 "github.com/intergral/deep/pkg/deeppb/tracepoint/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// case insensitive partial match
	Tags          map[string]string `protobuf:"bytes,1,rep,name=Tags,proto3" json:"Tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MinDurationMs uint32            `protobuf:"varint,2,opt,name=MinDurationMs,proto3" json:"MinDurationMs,omitempty"`
	MaxDurationMs uint32            `protobuf:"varint,3,opt,name=MaxDurationMs,proto3" json:"MaxDurationMs,omitempty"`
	Limit         uint32            `protobuf:"varint,4,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Start         uint32            `protobuf:"varint,5,opt,name=start,proto3" json:"start,omitempty"`
	End           uint32            `protobuf:"varint,6,opt,name=end,proto3" json:"end,omitempty"`
	// DeepQL query
	Query string `protobuf:"bytes,8,opt,name=Query,proto3" json:"Query,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{0}
}

func (x *SearchRequest) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SearchRequest) GetMinDurationMs() uint32 {
	if x != nil {
		return x.MinDurationMs
	}
	return 0
}

func (x *SearchRequest) GetMaxDurationMs() uint32 {
	if x != nil {
		return x.MaxDurationMs
	}
	return 0
}

func (x *SearchRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchRequest) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *SearchRequest) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *SearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

// SearchBlockRequest takes SearchRequest parameters as well as all information necessary
// to search a block in the backend.
type SearchBlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchReq     *SearchRequest `protobuf:"bytes,1,opt,name=searchReq,proto3" json:"searchReq,omitempty"`
	BlockID       string         `protobuf:"bytes,2,opt,name=blockID,proto3" json:"blockID,omitempty"`
	StartPage     uint32         `protobuf:"varint,3,opt,name=startPage,proto3" json:"startPage,omitempty"`
	PagesToSearch uint32         `protobuf:"varint,4,opt,name=pagesToSearch,proto3" json:"pagesToSearch,omitempty"`
	Encoding      string         `protobuf:"bytes,5,opt,name=encoding,proto3" json:"encoding,omitempty"`
	IndexPageSize uint32         `protobuf:"varint,6,opt,name=indexPageSize,proto3" json:"indexPageSize,omitempty"`
	TotalRecords  uint32         `protobuf:"varint,7,opt,name=totalRecords,proto3" json:"totalRecords,omitempty"`
	DataEncoding  string         `protobuf:"bytes,8,opt,name=dataEncoding,proto3" json:"dataEncoding,omitempty"`
	Version       string         `protobuf:"bytes,9,opt,name=version,proto3" json:"version,omitempty"`
	Size          uint64         `protobuf:"varint,10,opt,name=size,proto3" json:"size,omitempty"`             // total size of data file
	FooterSize    uint32         `protobuf:"varint,11,opt,name=footerSize,proto3" json:"footerSize,omitempty"` // size of file footer (parquet)
}

func (x *SearchBlockRequest) Reset() {
	*x = SearchBlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchBlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBlockRequest) ProtoMessage() {}

func (x *SearchBlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBlockRequest.ProtoReflect.Descriptor instead.
func (*SearchBlockRequest) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{1}
}

func (x *SearchBlockRequest) GetSearchReq() *SearchRequest {
	if x != nil {
		return x.SearchReq
	}
	return nil
}

func (x *SearchBlockRequest) GetBlockID() string {
	if x != nil {
		return x.BlockID
	}
	return ""
}

func (x *SearchBlockRequest) GetStartPage() uint32 {
	if x != nil {
		return x.StartPage
	}
	return 0
}

func (x *SearchBlockRequest) GetPagesToSearch() uint32 {
	if x != nil {
		return x.PagesToSearch
	}
	return 0
}

func (x *SearchBlockRequest) GetEncoding() string {
	if x != nil {
		return x.Encoding
	}
	return ""
}

func (x *SearchBlockRequest) GetIndexPageSize() uint32 {
	if x != nil {
		return x.IndexPageSize
	}
	return 0
}

func (x *SearchBlockRequest) GetTotalRecords() uint32 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

func (x *SearchBlockRequest) GetDataEncoding() string {
	if x != nil {
		return x.DataEncoding
	}
	return ""
}

func (x *SearchBlockRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SearchBlockRequest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchBlockRequest) GetFooterSize() uint32 {
	if x != nil {
		return x.FooterSize
	}
	return 0
}

type SearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshots []*SnapshotSearchMetadata `protobuf:"bytes,1,rep,name=snapshots,proto3" json:"snapshots,omitempty"`
	Metrics   *SearchMetrics            `protobuf:"bytes,2,opt,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{2}
}

func (x *SearchResponse) GetSnapshots() []*SnapshotSearchMetadata {
	if x != nil {
		return x.Snapshots
	}
	return nil
}

func (x *SearchResponse) GetMetrics() *SearchMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type SnapshotSearchMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotID        string `protobuf:"bytes,1,opt,name=snapshotID,proto3" json:"snapshotID,omitempty"`
	ServiceName       string `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	FilePath          string `protobuf:"bytes,3,opt,name=filePath,proto3" json:"filePath,omitempty"`
	LineNo            uint32 `protobuf:"varint,4,opt,name=lineNo,proto3" json:"lineNo,omitempty"`
	StartTimeUnixNano uint64 `protobuf:"varint,5,opt,name=startTimeUnixNano,proto3" json:"startTimeUnixNano,omitempty"`
	DurationNano      uint64 `protobuf:"varint,6,opt,name=durationNano,proto3" json:"durationNano,omitempty"`
}

func (x *SnapshotSearchMetadata) Reset() {
	*x = SnapshotSearchMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotSearchMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotSearchMetadata) ProtoMessage() {}

func (x *SnapshotSearchMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotSearchMetadata.ProtoReflect.Descriptor instead.
func (*SnapshotSearchMetadata) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{3}
}

func (x *SnapshotSearchMetadata) GetSnapshotID() string {
	if x != nil {
		return x.SnapshotID
	}
	return ""
}

func (x *SnapshotSearchMetadata) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *SnapshotSearchMetadata) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *SnapshotSearchMetadata) GetLineNo() uint32 {
	if x != nil {
		return x.LineNo
	}
	return 0
}

func (x *SnapshotSearchMetadata) GetStartTimeUnixNano() uint64 {
	if x != nil {
		return x.StartTimeUnixNano
	}
	return 0
}

func (x *SnapshotSearchMetadata) GetDurationNano() uint64 {
	if x != nil {
		return x.DurationNano
	}
	return 0
}

type SearchMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InspectedSnapshots uint32 `protobuf:"varint,1,opt,name=inspectedSnapshots,proto3" json:"inspectedSnapshots,omitempty"`
	InspectedBytes     uint64 `protobuf:"varint,2,opt,name=inspectedBytes,proto3" json:"inspectedBytes,omitempty"`
	InspectedBlocks    uint32 `protobuf:"varint,3,opt,name=inspectedBlocks,proto3" json:"inspectedBlocks,omitempty"`
	SkippedBlocks      uint32 `protobuf:"varint,4,opt,name=skippedBlocks,proto3" json:"skippedBlocks,omitempty"`
	SkippedSnapshots   uint32 `protobuf:"varint,5,opt,name=skippedSnapshots,proto3" json:"skippedSnapshots,omitempty"`
	TotalBlockBytes    uint64 `protobuf:"varint,6,opt,name=totalBlockBytes,proto3" json:"totalBlockBytes,omitempty"`
}

func (x *SearchMetrics) Reset() {
	*x = SearchMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMetrics) ProtoMessage() {}

func (x *SearchMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMetrics.ProtoReflect.Descriptor instead.
func (*SearchMetrics) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{4}
}

func (x *SearchMetrics) GetInspectedSnapshots() uint32 {
	if x != nil {
		return x.InspectedSnapshots
	}
	return 0
}

func (x *SearchMetrics) GetInspectedBytes() uint64 {
	if x != nil {
		return x.InspectedBytes
	}
	return 0
}

func (x *SearchMetrics) GetInspectedBlocks() uint32 {
	if x != nil {
		return x.InspectedBlocks
	}
	return 0
}

func (x *SearchMetrics) GetSkippedBlocks() uint32 {
	if x != nil {
		return x.SkippedBlocks
	}
	return 0
}

func (x *SearchMetrics) GetSkippedSnapshots() uint32 {
	if x != nil {
		return x.SkippedSnapshots
	}
	return 0
}

func (x *SearchMetrics) GetTotalBlockBytes() uint64 {
	if x != nil {
		return x.TotalBlockBytes
	}
	return 0
}

type SearchTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SearchTagsRequest) Reset() {
	*x = SearchTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTagsRequest) ProtoMessage() {}

func (x *SearchTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTagsRequest.ProtoReflect.Descriptor instead.
func (*SearchTagsRequest) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{5}
}

type SearchTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagNames []string `protobuf:"bytes,1,rep,name=tagNames,proto3" json:"tagNames,omitempty"`
}

func (x *SearchTagsResponse) Reset() {
	*x = SearchTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTagsResponse) ProtoMessage() {}

func (x *SearchTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTagsResponse.ProtoReflect.Descriptor instead.
func (*SearchTagsResponse) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{6}
}

func (x *SearchTagsResponse) GetTagNames() []string {
	if x != nil {
		return x.TagNames
	}
	return nil
}

type SearchTagValuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagName string `protobuf:"bytes,1,opt,name=tagName,proto3" json:"tagName,omitempty"`
}

func (x *SearchTagValuesRequest) Reset() {
	*x = SearchTagValuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTagValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTagValuesRequest) ProtoMessage() {}

func (x *SearchTagValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTagValuesRequest.ProtoReflect.Descriptor instead.
func (*SearchTagValuesRequest) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{7}
}

func (x *SearchTagValuesRequest) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

type SearchTagValuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagValues []string `protobuf:"bytes,1,rep,name=tagValues,proto3" json:"tagValues,omitempty"`
}

func (x *SearchTagValuesResponse) Reset() {
	*x = SearchTagValuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTagValuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTagValuesResponse) ProtoMessage() {}

func (x *SearchTagValuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTagValuesResponse.ProtoReflect.Descriptor instead.
func (*SearchTagValuesResponse) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{8}
}

func (x *SearchTagValuesResponse) GetTagValues() []string {
	if x != nil {
		return x.TagValues
	}
	return nil
}

type TagValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TagValue) Reset() {
	*x = TagValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagValue) ProtoMessage() {}

func (x *TagValue) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagValue.ProtoReflect.Descriptor instead.
func (*TagValue) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{9}
}

func (x *TagValue) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *TagValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SearchTagValuesV2Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagValues []*TagValue `protobuf:"bytes,1,rep,name=tagValues,proto3" json:"tagValues,omitempty"`
}

func (x *SearchTagValuesV2Response) Reset() {
	*x = SearchTagValuesV2Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTagValuesV2Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTagValuesV2Response) ProtoMessage() {}

func (x *SearchTagValuesV2Response) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTagValuesV2Response.ProtoReflect.Descriptor instead.
func (*SearchTagValuesV2Response) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{10}
}

func (x *SearchTagValuesV2Response) GetTagValues() []*TagValue {
	if x != nil {
		return x.TagValues
	}
	return nil
}

type SnapshotByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         []byte `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	BlockStart string `protobuf:"bytes,2,opt,name=blockStart,proto3" json:"blockStart,omitempty"`
	BlockEnd   string `protobuf:"bytes,3,opt,name=blockEnd,proto3" json:"blockEnd,omitempty"`
	QueryMode  string `protobuf:"bytes,5,opt,name=queryMode,proto3" json:"queryMode,omitempty"`
}

func (x *SnapshotByIDRequest) Reset() {
	*x = SnapshotByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotByIDRequest) ProtoMessage() {}

func (x *SnapshotByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotByIDRequest.ProtoReflect.Descriptor instead.
func (*SnapshotByIDRequest) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{11}
}

func (x *SnapshotByIDRequest) GetID() []byte {
	if x != nil {
		return x.ID
	}
	return nil
}

func (x *SnapshotByIDRequest) GetBlockStart() string {
	if x != nil {
		return x.BlockStart
	}
	return ""
}

func (x *SnapshotByIDRequest) GetBlockEnd() string {
	if x != nil {
		return x.BlockEnd
	}
	return ""
}

func (x *SnapshotByIDRequest) GetQueryMode() string {
	if x != nil {
		return x.QueryMode
	}
	return ""
}

type SnapshotByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshot *v1.Snapshot         `protobuf:"bytes,1,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	Metrics  *SnapshotByIDMetrics `protobuf:"bytes,2,opt,name=metrics,proto3" json:"metrics,omitempty"`
}

func (x *SnapshotByIDResponse) Reset() {
	*x = SnapshotByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotByIDResponse) ProtoMessage() {}

func (x *SnapshotByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotByIDResponse.ProtoReflect.Descriptor instead.
func (*SnapshotByIDResponse) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{12}
}

func (x *SnapshotByIDResponse) GetSnapshot() *v1.Snapshot {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

func (x *SnapshotByIDResponse) GetMetrics() *SnapshotByIDMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

type SnapshotByIDMetrics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FailedBlocks uint32 `protobuf:"varint,1,opt,name=failedBlocks,proto3" json:"failedBlocks,omitempty"`
}

func (x *SnapshotByIDMetrics) Reset() {
	*x = SnapshotByIDMetrics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotByIDMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotByIDMetrics) ProtoMessage() {}

func (x *SnapshotByIDMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotByIDMetrics.ProtoReflect.Descriptor instead.
func (*SnapshotByIDMetrics) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{13}
}

func (x *SnapshotByIDMetrics) GetFailedBlocks() uint32 {
	if x != nil {
		return x.FailedBlocks
	}
	return 0
}

type PushSnapshotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshot *v1.Snapshot `protobuf:"bytes,1,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
}

func (x *PushSnapshotRequest) Reset() {
	*x = PushSnapshotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSnapshotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSnapshotRequest) ProtoMessage() {}

func (x *PushSnapshotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSnapshotRequest.ProtoReflect.Descriptor instead.
func (*PushSnapshotRequest) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{14}
}

func (x *PushSnapshotRequest) GetSnapshot() *v1.Snapshot {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

// Write
type PushSnapshotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushSnapshotResponse) Reset() {
	*x = PushSnapshotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushSnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushSnapshotResponse) ProtoMessage() {}

func (x *PushSnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushSnapshotResponse.ProtoReflect.Descriptor instead.
func (*PushSnapshotResponse) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{15}
}

type PushBytesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snapshot []byte `protobuf:"bytes,1,opt,name=snapshot,proto3" json:"snapshot,omitempty"`
	ID       []byte `protobuf:"bytes,2,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *PushBytesRequest) Reset() {
	*x = PushBytesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushBytesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushBytesRequest) ProtoMessage() {}

func (x *PushBytesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushBytesRequest.ProtoReflect.Descriptor instead.
func (*PushBytesRequest) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{16}
}

func (x *PushBytesRequest) GetSnapshot() []byte {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

func (x *PushBytesRequest) GetID() []byte {
	if x != nil {
		return x.ID
	}
	return nil
}

type PushBytesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushBytesResponse) Reset() {
	*x = PushBytesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushBytesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushBytesResponse) ProtoMessage() {}

func (x *PushBytesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushBytesResponse.ProtoReflect.Descriptor instead.
func (*PushBytesResponse) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{17}
}

type DeepQlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *DeepQlRequest) Reset() {
	*x = DeepQlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeepQlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepQlRequest) ProtoMessage() {}

func (x *DeepQlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepQlRequest.ProtoReflect.Descriptor instead.
func (*DeepQlRequest) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{18}
}

func (x *DeepQlRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type DeepQlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	All      []*v1.TracePointConfig `protobuf:"bytes,1,rep,name=all,proto3" json:"all,omitempty"`
	Affected []*v1.TracePointConfig `protobuf:"bytes,2,rep,name=affected,proto3" json:"affected,omitempty"`
	Type     string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *DeepQlResponse) Reset() {
	*x = DeepQlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeepQlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeepQlResponse) ProtoMessage() {}

func (x *DeepQlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeepQlResponse.ProtoReflect.Descriptor instead.
func (*DeepQlResponse) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{19}
}

func (x *DeepQlResponse) GetAll() []*v1.TracePointConfig {
	if x != nil {
		return x.All
	}
	return nil
}

func (x *DeepQlResponse) GetAffected() []*v1.TracePointConfig {
	if x != nil {
		return x.Affected
	}
	return nil
}

func (x *DeepQlResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type LoadTracepointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Request *v11.PollRequest `protobuf:"bytes,1,opt,name=request,proto3,oneof" json:"request,omitempty"`
}

func (x *LoadTracepointRequest) Reset() {
	*x = LoadTracepointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadTracepointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadTracepointRequest) ProtoMessage() {}

func (x *LoadTracepointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadTracepointRequest.ProtoReflect.Descriptor instead.
func (*LoadTracepointRequest) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{20}
}

func (x *LoadTracepointRequest) GetRequest() *v11.PollRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type LoadTracepointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *v11.PollResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *LoadTracepointResponse) Reset() {
	*x = LoadTracepointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadTracepointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadTracepointResponse) ProtoMessage() {}

func (x *LoadTracepointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadTracepointResponse.ProtoReflect.Descriptor instead.
func (*LoadTracepointResponse) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{21}
}

func (x *LoadTracepointResponse) GetResponse() *v11.PollResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type CreateTracepointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tracepoint *v1.TracePointConfig `protobuf:"bytes,1,opt,name=tracepoint,proto3" json:"tracepoint,omitempty"`
}

func (x *CreateTracepointRequest) Reset() {
	*x = CreateTracepointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTracepointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTracepointRequest) ProtoMessage() {}

func (x *CreateTracepointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTracepointRequest.ProtoReflect.Descriptor instead.
func (*CreateTracepointRequest) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{22}
}

func (x *CreateTracepointRequest) GetTracepoint() *v1.TracePointConfig {
	if x != nil {
		return x.Tracepoint
	}
	return nil
}

type CreateTracepointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Created *v1.TracePointConfig `protobuf:"bytes,1,opt,name=created,proto3" json:"created,omitempty"`
}

func (x *CreateTracepointResponse) Reset() {
	*x = CreateTracepointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTracepointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTracepointResponse) ProtoMessage() {}

func (x *CreateTracepointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTracepointResponse.ProtoReflect.Descriptor instead.
func (*CreateTracepointResponse) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{23}
}

func (x *CreateTracepointResponse) GetCreated() *v1.TracePointConfig {
	if x != nil {
		return x.Created
	}
	return nil
}

type DeleteTracepointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TracepointID string `protobuf:"bytes,1,opt,name=tracepointID,proto3" json:"tracepointID,omitempty"`
}

func (x *DeleteTracepointRequest) Reset() {
	*x = DeleteTracepointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTracepointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTracepointRequest) ProtoMessage() {}

func (x *DeleteTracepointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTracepointRequest.ProtoReflect.Descriptor instead.
func (*DeleteTracepointRequest) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteTracepointRequest) GetTracepointID() string {
	if x != nil {
		return x.TracepointID
	}
	return ""
}

type DeleteTracepointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deleted *v1.TracePointConfig `protobuf:"bytes,1,opt,name=deleted,proto3" json:"deleted,omitempty"`
}

func (x *DeleteTracepointResponse) Reset() {
	*x = DeleteTracepointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deep_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTracepointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTracepointResponse) ProtoMessage() {}

func (x *DeleteTracepointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deep_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTracepointResponse.ProtoReflect.Descriptor instead.
func (*DeleteTracepointResponse) Descriptor() ([]byte, []int) {
	return file_deep_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteTracepointResponse) GetDeleted() *v1.TracePointConfig {
	if x != nil {
		return x.Deleted
	}
	return nil
}

var File_deep_proto protoreflect.FileDescriptor

var file_deep_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x64, 0x65, 0x65, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x64, 0x65,
	0x65, 0x70, 0x70, 0x62, 0x1a, 0x1e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x70, 0x6f, 0x6c, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f,
	0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x02, 0x0a, 0x0d, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x04, 0x54, 0x61,
	0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x54, 0x61, 0x67, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x4d, 0x69, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x4d, 0x69, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x4d, 0x61,
	0x78, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a,
	0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xff, 0x02, 0x0a, 0x12, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x33, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x70, 0x61, 0x67, 0x65, 0x73, 0x54, 0x6f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x61, 0x67, 0x65, 0x73, 0x54, 0x6f, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x24,
	0x0a, 0x0d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f,
	0x6f, 0x74, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x7f, 0x0a, 0x0e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x09, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x6d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x65,
	0x65, 0x70, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x16,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x6f, 0x12, 0x2c, 0x0a, 0x11,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x4e, 0x61, 0x6e,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x55, 0x6e, 0x69, 0x78, 0x4e, 0x61, 0x6e, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6e, 0x6f, 0x22, 0x8d,
	0x02, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73,
	0x12, 0x2e, 0x0a, 0x12, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x69, 0x6e,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0f, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x70,
	0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x6b, 0x69, 0x70,
	0x70, 0x65, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x42, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0x13,
	0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x30, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x32, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54,
	0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x37, 0x0a, 0x17, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0x34, 0x0a, 0x08, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4b, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x56, 0x32, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70,
	0x62, 0x2e, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x74, 0x61, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x7f, 0x0a, 0x13, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x45, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x14, 0x53, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64,
	0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x73, 0x22, 0x39, 0x0a, 0x13, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x51, 0x0a,
	0x13, 0x50, 0x75, 0x73, 0x68, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x08, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x22, 0x16, 0x0a, 0x14, 0x50, 0x75, 0x73, 0x68, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x0a, 0x10, 0x50, 0x75, 0x73, 0x68,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x49, 0x44, 0x22, 0x13, 0x0a, 0x11, 0x50, 0x75, 0x73, 0x68,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x0a,
	0x0d, 0x44, 0x65, 0x65, 0x70, 0x51, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x22, 0xa2, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x65, 0x70, 0x51, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x03, 0x61, 0x6c,
	0x6c, 0x12, 0x42, 0x0a, 0x08, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x61, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x5f, 0x0a, 0x15, 0x4c, 0x6f, 0x61,
	0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x70, 0x6f, 0x6c,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x52, 0x0a, 0x16, 0x4c, 0x6f,
	0x61, 0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e,
	0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61,
	0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x22, 0x5c, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22,
	0x3d, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x44, 0x22, 0x5c,
	0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x64, 0x65,
	0x65, 0x70, 0x70, 0x62, 0x2e, 0x74, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x32, 0xde, 0x03, 0x0a,
	0x0e, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4f, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x1b, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3f, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74,
	0x12, 0x15, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x1a, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x64,
	0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x54, 0x61, 0x67, 0x73, 0x12, 0x19, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54,
	0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a,
	0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x12, 0x1e, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x56, 0x32, 0x12, 0x1e, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x56, 0x32, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x5f, 0x0a,
	0x10, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x4b, 0x0a, 0x0c, 0x50, 0x75, 0x73, 0x68, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x12, 0x1b, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x55,
	0x0a, 0x0f, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x42, 0x0a, 0x09, 0x50, 0x75, 0x73, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x18,
	0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70,
	0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xe1, 0x02, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x63, 0x65, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x52, 0x0a, 0x0f, 0x4c, 0x6f, 0x61, 0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x4c, 0x6f,
	0x61, 0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x61,
	0x64, 0x54, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x63, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x64, 0x65, 0x65, 0x70,
	0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x64, 0x65, 0x65,
	0x70, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57,
	0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0d, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x44, 0x65, 0x65, 0x70, 0x51, 0x6c, 0x12, 0x15, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x65, 0x70, 0x51, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x64, 0x65, 0x65, 0x70, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x65, 0x70, 0x51, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x67, 0x72, 0x61,
	0x6c, 0x2f, 0x64, 0x65, 0x65, 0x70, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x64, 0x65, 0x65, 0x70, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_deep_proto_rawDescOnce sync.Once
	file_deep_proto_rawDescData = file_deep_proto_rawDesc
)

func file_deep_proto_rawDescGZIP() []byte {
	file_deep_proto_rawDescOnce.Do(func() {
		file_deep_proto_rawDescData = protoimpl.X.CompressGZIP(file_deep_proto_rawDescData)
	})
	return file_deep_proto_rawDescData
}

var file_deep_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_deep_proto_goTypes = []interface{}{
	(*SearchRequest)(nil),             // 0: deeppb.SearchRequest
	(*SearchBlockRequest)(nil),        // 1: deeppb.SearchBlockRequest
	(*SearchResponse)(nil),            // 2: deeppb.SearchResponse
	(*SnapshotSearchMetadata)(nil),    // 3: deeppb.SnapshotSearchMetadata
	(*SearchMetrics)(nil),             // 4: deeppb.SearchMetrics
	(*SearchTagsRequest)(nil),         // 5: deeppb.SearchTagsRequest
	(*SearchTagsResponse)(nil),        // 6: deeppb.SearchTagsResponse
	(*SearchTagValuesRequest)(nil),    // 7: deeppb.SearchTagValuesRequest
	(*SearchTagValuesResponse)(nil),   // 8: deeppb.SearchTagValuesResponse
	(*TagValue)(nil),                  // 9: deeppb.TagValue
	(*SearchTagValuesV2Response)(nil), // 10: deeppb.SearchTagValuesV2Response
	(*SnapshotByIDRequest)(nil),       // 11: deeppb.SnapshotByIDRequest
	(*SnapshotByIDResponse)(nil),      // 12: deeppb.SnapshotByIDResponse
	(*SnapshotByIDMetrics)(nil),       // 13: deeppb.SnapshotByIDMetrics
	(*PushSnapshotRequest)(nil),       // 14: deeppb.PushSnapshotRequest
	(*PushSnapshotResponse)(nil),      // 15: deeppb.PushSnapshotResponse
	(*PushBytesRequest)(nil),          // 16: deeppb.PushBytesRequest
	(*PushBytesResponse)(nil),         // 17: deeppb.PushBytesResponse
	(*DeepQlRequest)(nil),             // 18: deeppb.DeepQlRequest
	(*DeepQlResponse)(nil),            // 19: deeppb.DeepQlResponse
	(*LoadTracepointRequest)(nil),     // 20: deeppb.LoadTracepointRequest
	(*LoadTracepointResponse)(nil),    // 21: deeppb.LoadTracepointResponse
	(*CreateTracepointRequest)(nil),   // 22: deeppb.CreateTracepointRequest
	(*CreateTracepointResponse)(nil),  // 23: deeppb.CreateTracepointResponse
	(*DeleteTracepointRequest)(nil),   // 24: deeppb.DeleteTracepointRequest
	(*DeleteTracepointResponse)(nil),  // 25: deeppb.DeleteTracepointResponse
	nil,                               // 26: deeppb.SearchRequest.TagsEntry
	(*v1.Snapshot)(nil),               // 27: deeppb.tracepoint.v1.Snapshot
	(*v1.TracePointConfig)(nil),       // 28: deeppb.tracepoint.v1.TracePointConfig
	(*v11.PollRequest)(nil),           // 29: deeppb.poll.v1.PollRequest
	(*v11.PollResponse)(nil),          // 30: deeppb.poll.v1.PollResponse
}
var file_deep_proto_depIdxs = []int32{
	26, // 0: deeppb.SearchRequest.Tags:type_name -> deeppb.SearchRequest.TagsEntry
	0,  // 1: deeppb.SearchBlockRequest.searchReq:type_name -> deeppb.SearchRequest
	3,  // 2: deeppb.SearchResponse.snapshots:type_name -> deeppb.SnapshotSearchMetadata
	4,  // 3: deeppb.SearchResponse.metrics:type_name -> deeppb.SearchMetrics
	9,  // 4: deeppb.SearchTagValuesV2Response.tagValues:type_name -> deeppb.TagValue
	27, // 5: deeppb.SnapshotByIDResponse.snapshot:type_name -> deeppb.tracepoint.v1.Snapshot
	13, // 6: deeppb.SnapshotByIDResponse.metrics:type_name -> deeppb.SnapshotByIDMetrics
	27, // 7: deeppb.PushSnapshotRequest.snapshot:type_name -> deeppb.tracepoint.v1.Snapshot
	28, // 8: deeppb.DeepQlResponse.all:type_name -> deeppb.tracepoint.v1.TracePointConfig
	28, // 9: deeppb.DeepQlResponse.affected:type_name -> deeppb.tracepoint.v1.TracePointConfig
	29, // 10: deeppb.LoadTracepointRequest.request:type_name -> deeppb.poll.v1.PollRequest
	30, // 11: deeppb.LoadTracepointResponse.response:type_name -> deeppb.poll.v1.PollResponse
	28, // 12: deeppb.CreateTracepointRequest.tracepoint:type_name -> deeppb.tracepoint.v1.TracePointConfig
	28, // 13: deeppb.CreateTracepointResponse.created:type_name -> deeppb.tracepoint.v1.TracePointConfig
	28, // 14: deeppb.DeleteTracepointResponse.deleted:type_name -> deeppb.tracepoint.v1.TracePointConfig
	11, // 15: deeppb.QuerierService.FindSnapshotByID:input_type -> deeppb.SnapshotByIDRequest
	0,  // 16: deeppb.QuerierService.SearchRecent:input_type -> deeppb.SearchRequest
	1,  // 17: deeppb.QuerierService.SearchBlock:input_type -> deeppb.SearchBlockRequest
	5,  // 18: deeppb.QuerierService.SearchTags:input_type -> deeppb.SearchTagsRequest
	7,  // 19: deeppb.QuerierService.SearchTagValues:input_type -> deeppb.SearchTagValuesRequest
	7,  // 20: deeppb.QuerierService.SearchTagValuesV2:input_type -> deeppb.SearchTagValuesRequest
	14, // 21: deeppb.MetricsGenerator.PushSnapshot:input_type -> deeppb.PushSnapshotRequest
	16, // 22: deeppb.IngesterService.PushBytes:input_type -> deeppb.PushBytesRequest
	20, // 23: deeppb.TracepointConfigService.LoadTracepoints:input_type -> deeppb.LoadTracepointRequest
	22, // 24: deeppb.TracepointConfigService.CreateTracepoint:input_type -> deeppb.CreateTracepointRequest
	24, // 25: deeppb.TracepointConfigService.DeleteTracepoint:input_type -> deeppb.DeleteTracepointRequest
	18, // 26: deeppb.TracepointConfigService.ExecuteDeepQl:input_type -> deeppb.DeepQlRequest
	12, // 27: deeppb.QuerierService.FindSnapshotByID:output_type -> deeppb.SnapshotByIDResponse
	2,  // 28: deeppb.QuerierService.SearchRecent:output_type -> deeppb.SearchResponse
	2,  // 29: deeppb.QuerierService.SearchBlock:output_type -> deeppb.SearchResponse
	6,  // 30: deeppb.QuerierService.SearchTags:output_type -> deeppb.SearchTagsResponse
	8,  // 31: deeppb.QuerierService.SearchTagValues:output_type -> deeppb.SearchTagValuesResponse
	10, // 32: deeppb.QuerierService.SearchTagValuesV2:output_type -> deeppb.SearchTagValuesV2Response
	15, // 33: deeppb.MetricsGenerator.PushSnapshot:output_type -> deeppb.PushSnapshotResponse
	17, // 34: deeppb.IngesterService.PushBytes:output_type -> deeppb.PushBytesResponse
	21, // 35: deeppb.TracepointConfigService.LoadTracepoints:output_type -> deeppb.LoadTracepointResponse
	23, // 36: deeppb.TracepointConfigService.CreateTracepoint:output_type -> deeppb.CreateTracepointResponse
	25, // 37: deeppb.TracepointConfigService.DeleteTracepoint:output_type -> deeppb.DeleteTracepointResponse
	19, // 38: deeppb.TracepointConfigService.ExecuteDeepQl:output_type -> deeppb.DeepQlResponse
	27, // [27:39] is the sub-list for method output_type
	15, // [15:27] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_deep_proto_init() }
func file_deep_proto_init() {
	if File_deep_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_deep_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchBlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotSearchMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTagValuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTagValuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTagValuesV2Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotByIDMetrics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushSnapshotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushSnapshotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushBytesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushBytesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeepQlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeepQlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadTracepointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadTracepointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTracepointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTracepointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTracepointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deep_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTracepointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_deep_proto_msgTypes[20].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_deep_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_deep_proto_goTypes,
		DependencyIndexes: file_deep_proto_depIdxs,
		MessageInfos:      file_deep_proto_msgTypes,
	}.Build()
	File_deep_proto = out.File
	file_deep_proto_rawDesc = nil
	file_deep_proto_goTypes = nil
	file_deep_proto_depIdxs = nil
}
